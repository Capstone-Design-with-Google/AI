// .devcontainer/devcontainer.json
{
    "name": "AI Shorts Generator (Python 3.11.9)",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-toolsai.jupyter",
                "bierner.github-markdown-preview"
            ],
            // settings는 customizations.vscode 내부에 위치해야 합니다.
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.linting.pylintEnabled": true,
                "python.linting.enabled": true,
                "editor.formatOnSave": true,
                "python.formatting.provider": "autopep8"
            }
        }
    },
    // postCreateCommand는 하나만 있어야 합니다.
    "postCreateCommand": "mkdir -p credentials && echo \"${env:GCP_CREDENTIALS_CONTENT_ENV_VAR}\" > credentials/service_account.json && export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/credentials/service_account.json && python3 config.py && echo 'Codespace 준비 완료! main.py를 실행하세요.'",

    // "forwardPorts": [8000], // 필요시 주석 해제

    "containerEnv": {
        // GitHub Secret 'GOOGLE_API_KEY_GEMINI_SECRET' (GitHub에 생성한 Secret 이름)의 값을
        // Codespace 컨테이너 내의 'GOOGLE_API_KEY_GEMINI' 환경 변수로 설정합니다.
        "GOOGLE_API_KEY_GEMINI": "${codespaceSecret:GOOGLE_API_KEY_GEMINI_SECRET}",

        // GitHub Secret 'GCP_SERVICE_ACCOUNT_KEY_JSON_CONTENT' (GitHub에 생성한 Secret 이름)의 값을
        // Codespace 컨테이너 내의 'GCP_CREDENTIALS_CONTENT_ENV_VAR' 환경 변수로 설정합니다.
        "GCP_SERVICE_ACCOUNT_KEY_PATH": "${codespaceSecret:GCP_CREDENTIALS_SECRET}"
    },

    "runArgs": ["--ulimit", "nofile=1024:524288"]
}